// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String        @id @default(uuid())
  googleId    String
  displayName String
  email       String
  photo       String
  videos      Video[]
  videoQueue  VideoQueue[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model Video {
  id          String        @id @default(uuid())
  title       String
  description String
  playlistPath String?
  videoPath   String?
  user        User          @relation(fields: [userId], references: [id])
  userId      String
  videoQueue  VideoQueue?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  // @@index([userId])
}

model VideoQueue {
  id          String       @id @default(uuid())
  status      VideoStatus  @default(QUEUED)
  playlistPath String?
  user        User         @relation(fields: [userId], references: [id])
  userId      String
  video       Video        @relation(fields: [videoId], references: [id])
  videoId     String       @unique
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  // @@index([userId])
}

enum VideoStatus {
  QUEUED
  IN_PROCESS
  PROCESSED
  FAILED
}